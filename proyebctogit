Git es un sistema de control de versiones distribuido que te permite registrar los cambios que haces en tus archivos y volver a versiones anteriores si algo sale mal. Fue diseñado por Linus Torvalds para garantizar la eficiencia y confiabilidad del mantenimiento de versiones de aplicaciones que tienen un gran número de archivos de código fuente.

Git está optimizado para guardar cambios de forma incremental.

Permite contar con un historial, regresar a una versión anterior y agregar funcionalidades.

Lleva un registro de los cambios que otras personas realicen en los archivos.

Git fue diseñado para operar en un entorno Linux. Actualmente, es multiplataforma, es decir, es compatible con Linux, MacOS y Windows. En la máquina local se encuentra Git, se utiliza bajo la terminal o línea de comandos y tiene comandos como merge, pull, add, commit y rebase, entre otros.

Para qué proyectos sirve Git
Con Git se obtiene una mayor eficiencia usando archivos de texto plano, ya que con archivos binarios no puede guardar solo los cambios, sino que debe volver a grabar el archivo completo ante cada modificación, por mínima que sea, lo que hace que incremente demasiado el tamaño del repositorio.

“Guardar archivos binarios en el repositorio de Git no es una buena práctica, únicamente deberían guardarse archivos pequeños (como logos) que no sufran casi modificaciones durante la vida del proyecto. Los binarios deben guardarse en un CDN”.

Cómo usar git stash

Características de Git
Git te ayuda a trabajar de manera más organizada y colaborativa en proyectos de desarrollo de software. Estas son algunas de sus principales características:

Control de versiones
Git almacena la información como un conjunto de archivos. Te permite llevar un registro de los cambios que haces en tus archivos, lo que significa que siempre puedes volver a versiones anteriores si algo sale mal.

Ramificación
Puedes crear ramas en tu proyecto, lo que te permite trabajar en diferentes características o aspectos del mismo sin afectar el trabajo de los demás.

Colaboración
En Git, varias personas pueden trabajar en diferentes aspectos del proyecto al mismo tiempo.

Seguridad
No existen cambios, corrupción en archivos o cualquier alteración sin que Git lo sepa. Git cuenta con 3 estados en los que es posible localizar archivos: Staged, Modified y Committed.

Flexibilidad
Casi todo en Git es local. Es difícil que se necesiten recursos o información externos, basta con los recursos locales con los que cuenta.

Comandos
Git tiene una sintaxis de comandos bastante sencilla y fácil de aprender, lo que lo hace accesible incluso para principiantes en programación.

¿Qué es un sistema de control de versiones?
El SCV o VCS (por sus siglas en inglés) es un sistema que registra los cambios realizados sobre un archivo o conjunto de archivos a lo largo del tiempo, de modo que puedas llevar el historial del ciclo de vida de un proyecto, comparar cambios a lo largo del tiempo, ver quién los realizó o revertir el proyecto entero a un estado anterior.

Cualquier tipo de archivo que se encuentre en un ordenador puede ponerse bajo control de versiones.
Que es Git y Github

¿En qué se diferencia de Github?
Github es una plataforma de desarrollo colaborativo para alojar proyectos utilizando el sistema de control de versiones Git. Se emplea principalmente para la creación de código fuente de programas de computadora.

Puede considerarse a Github como la red social de código para los programadores y en muchos casos es visto como un curriculum vitae, pues aquí se guarda el portafolio de proyectos de programación.

Características de Github
GitHub permite alojar proyectos en repositorios de forma gratuita y pública, pero tiene una forma de pago para privados.

Puedes compartir fácilmente tus proyectos.

Permite colaborar para mejorar los proyectos de otros y a otros mejorar o aportar a los tuyos.

Ayuda a reducir significativamente los errores humanos, a tener un mejor mantenimiento de distintos entornos y a detectar fallos de una forma
 más rápida y eficiente.

Es la opción perfecta para poder trabajar en equipo en un mismo proyecto.

Ofrece todas las ventajas del sistema de control de versiones Git, pero también tiene otras herramientas que ayudan a tener un mejor control
 de los proyectos.

que es OPENSSL
	Generalidades
OpenSSL es un "toolkit" para los protocoles Transporte Seguro de Capas (Transport Layer Security - TLS) y 
los enchufes seguros de capas (Secure Sockets Layer - SSL). También es una
 librería de propósitos generales de criptografía. Es usado para asegurar las conexiones en un servidor dentro de tu software.

GIT CONFIG --LIST
Muestra las configuracion de git 

git config --l�ist --show -origin 
muestra l�a ruta donde esta el archivo de configuracion

git config --global user.name
para modificar la configuracion del usuario 

git config --global user.email
para cambiar la configuracion de�l email 


pasos para hacer uso de los repositorios de git

iniciar el repositorio - cammand git init

ver estatus de git - caommand git status

añadir nuevo archivos - cammand git add <namefile>

para sacar los archivos a commit - command git rm <namefile>

para cached el archivo - command git rm --cached <namefile>

para hacer commit - command git commit -m "write a describe message>

git add . (el punto significa que va añadir todos los archivos de la carpeta
y ya añadidos los nuevos cambios ya le puedo hacer commit

git log <filename>
puedo ver el historial del cambios 

la palabra HEAD en el historial significa que es el archivo mas reciente
 
git show <namefile>
muestra el archivos y los cambios 

para ver las diferencias entre los commits solo colocamos la palabra diff y los commits 
a comparar
git diff <commit1> <commit2> 

